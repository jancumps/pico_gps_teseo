name: Build on ubuntu against pico-sdk develop
on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:
  #push:
  #  branches:
  #    - 'develop'
  #    - 'main'
  pull_request:
    types: [opened, reopened]
    branches:
      - 'develop'
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
          mkdir -p "${{ github.workspace }}"

      - name: Checkout pico_gps_teseo
        uses: actions/checkout@v4
        with:
          path: pico_gps_teseo
          submodules: true

      - name: Checkout pico-sdk/develop
        uses: actions/checkout@v4
        with:
          repository: raspberrypi/pico-sdk
          ref: develop
          path: pico-sdk

      - name: Checkout pico-sdk submodules
        working-directory: ${{github.workspace}}/pico-sdk
        run: git submodule update --init

      - name: Install dependencies
        run: |
          sudo apt-get install cmake
          # install gcc cross-compile for ARM v 13.3.1
          # curl -Lo gcc-arm-none-eabi.tar.bz2 "https://developer.arm.com/-/media/Files/downloads/gnu-rm/10.3-2021.10/gcc-arm-none-eabi-10.3-2021.10-x86_64-linux.tar.bz2?rev=78196d3461ba4c9089a67b5f33edf82a&hash=5631ACEF1F8F237389F14B41566964EC"
          curl -Lo gcc-arm-none-eabi.tar.xz "https://developer.arm.com/-/media/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi.tar.xz"
          sudo mkdir /opt/gcc-arm-none-eabi
          sudo tar xf gcc-arm-none-eabi.tar.xz --strip-components=1 -C /opt/gcc-arm-none-eabi
          echo 'export PATH=$PATH:/opt/gcc-arm-none-eabi/bin' | sudo tee -a /etc/profile.d/gcc-arm-none-eabi.sh
          export PATH=$PATH:/opt/gcc-arm-none-eabi/bin
          export PICO_TOOLCHAIN_PATH=/opt/gcc-arm-none-eabi/bin
          source /etc/profile
          ls -lrta /opt/gcc-arm-none-eabi/bin
          arm-none-eabi-c++ --version
          
          # sudo apt install gcc-arm-none-eabi
          # whereis arm-none-eabi-gcc
          # ls -lrta /usr/bin/arm-none-eabi-gcc
          # /usr/bin/arm-none-eabi-gcc --version

      - name: Build Project
        working-directory: ${{github.workspace}}/pico_gps_teseo
        # bash required otherwise this mysteriously (no error) fails at "Generating cyw43_bus_pio_spi.pio.h"
        shell: bash
        run: |
          mkdir build
          cd build
          cmake .. -G "Unix Makefiles" -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_C_COMPILER:FILEPATH=/opt/gcc-arm-none-eabi/bin/arm-none-eabi-gcc -DCMAKE_CXX_COMPILER:FILEPATH=/opt/gcc-arm-none-eabi/bin/arm-none-eabi-g++ -DPICO_TOOLCHAIN_PATH=/opt/gcc-arm-none-eabi/bin -DPICO_SDK_PATH=../../pico-sdk -DCMAKE_BUILD_TYPE=Release -DPICO_BOARD=pico
          cmake --build .
          cd ..

      - name: Deploy Nightly Development Release
        if: ! contains(github.ref, 'main')        
        uses: pyTooling/Actions/releaser@r0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: nightly_development
          files: |
            ${{github.workspace}}/pico_gps_tese/pico_gps_teseo/build/pico_gps_teseo_reply_response_uart.uf2
            ${{github.workspace}}/pico_gps_teseo/pico_gps_teseo/build/pico_gps_teseo_reply_response_i2c.uf2
            ${{github.workspace}}/pico_gps_teseo/pico_gps_teseo/build/pico_gps_teseo_nmea_parse_uart.uf2
            ${{github.workspace}}/pico_gps_teseo/pico_gps_teseo/build/pico_gps_teseo_nmea_parse_uart.uf2

